<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Song extends Model
{
    protected $table = 'song';

    /**-------------------------------------------------------------
     * Роблю звязок між таблицями
     * ----------------------------------------------------------------**/
    public function categorySong()
    {
        return $this->belongsTo('App\Models\CategorySong');
    }

    public function performer()
    {
        return $this->belongsTo('App\Models\Performer');
    }

    public function songComment()
    {
        return $this->hasMany('App\Models\SongComment');
    }
    /**-------------------------------------------------------------
     * Кінець
     * ----------------------------------------------------------------**/
    /**-------------------------------------------------------------
     * Витягую всі пісні до 30
     * ----------------------------------------------------------------**/
    public function getActiveSongs()
    {
        return $this->published()->paginate(30);
    }
    /**-------------------------------------------------------------
     * Кінець
     * ----------------------------------------------------------------**/
    /**-------------------------------------------------------------
     * Витягую пісню як належить певній категорії
     * ----------------------------------------------------------------**/
    public function getActive($idCat)
    {
        return $this->where(['active' => '1', 'category_song_id' => $idCat])->paginate(30);
    }
    /**-------------------------------------------------------------
     * Кінець
     * ----------------------------------------------------------------**/
    /**-------------------------------------------------------------
     * Передаю дані для сортування і сортую список пісень в певних категоріях
     * ----------------------------------------------------------------**/
    public function sortSongInCategory($idCat, $sort, $sortBy)
    {
        return $this->where(['active' => '1', 'category_song_id' => $idCat])->orderBy($sort, $sortBy)->paginate(30);

    }
    /**-------------------------------------------------------------
     * Кінець
     * ----------------------------------------------------------------**/
    /**-------------------------------------------------------------
     * Передаю дані для сортування і сортую список пісні
     * ----------------------------------------------------------------**/
    public function sortSong($sort, $sortBy)
    {
        return $this->published()->orderBy($sort, $sortBy)->paginate(30);

    }
    /**-------------------------------------------------------------
     * Кінець
     * ----------------------------------------------------------------**/
    /**-------------------------------------------------------------
     * Передаю дані для сортування і сортую список пісні по букві
     * ----------------------------------------------------------------**/
    public function sortSongAlphabet($item)
    {
        return $this->published()->where('title', 'like', $item.'%')->paginate(30);

    }
    /**-------------------------------------------------------------
     * Кінець
     * ----------------------------------------------------------------**/
    /**-------------------------------------------------------------
     * Витягую категорії які найбільш переглядають і відсортовую за певною букввою
     * ----------------------------------------------------------------**/
    public function most_popular_sort($item)
    {
        return $this->published()->where('title', 'like', $item.'%')->orderBy('count_views_song', 'desc')->take(5)->get();

    }
    /**-------------------------------------------------------------
     * Кінець
     * ----------------------------------------------------------------**/
    /**-------------------------------------------------------------
     * Витягую категорії які були додані остані і відсортовую за певною букввою
     * ----------------------------------------------------------------**/
    public function last_add_sort($item)
    {
        return $this->published()->where('title', 'like', $item.'%')->orderBy('created_at', 'desc')->take(5)->get();

    }
    /**-------------------------------------------------------------
     * Кінець
     * ----------------------------------------------------------------**/
    /**-------------------------------------------------------------
     * Витягую одну пісню
     * ----------------------------------------------------------------**/
    public function oneSong($slug)
    {
        return $this->where(['active' => '1', 'slug' => $slug])->firstOrFail();
    }
    /**-------------------------------------------------------------
     * Кінець
     * ----------------------------------------------------------------**/
    /**-------------------------------------------------------------
     * Витягую одну пісню для виконавця
     * ----------------------------------------------------------------**/
    public function SongPerformer($idPerformer)
    {
        return $this->where(['active' => '1', 'performer_id' => $idPerformer])->paginate(30);
    }
    /**-------------------------------------------------------------
     * Кінець
     * ----------------------------------------------------------------**/
    /**-------------------------------------------------------------
     * Витягую категорії які найбільш переглядають
     * ----------------------------------------------------------------**/
    public function most_popular()
    {
        return $this->published()->orderBy('count_views_song', 'desc')->take(5)->get();

    }
    /**-------------------------------------------------------------
     * Кінець
     * ----------------------------------------------------------------**/
    /**-------------------------------------------------------------
     * Витягую категорії які були додані остані
     * ----------------------------------------------------------------**/
    public function last_add()
    {
        return $this->published()->orderBy('created_at', 'desc')->take(5)->get();

    }
    /**-------------------------------------------------------------
     * Кінець
     * ----------------------------------------------------------------**/
    /**-------------------------------------------------------------
     * Витягую список пісень які найбільш переглядають в певній категорії
     * ----------------------------------------------------------------**/
    public function most_popular_songInCategory($idCat)
    {
        return $this->where(['active' => '1', 'category_song_id' => $idCat])->orderBy('count_views_song', 'desc')->take(5)->get();

    }
    /**-------------------------------------------------------------
     * Кінець
     * ----------------------------------------------------------------**/
    /**-------------------------------------------------------------
     * Витягую список пісень які були додані остані в певній категорії
     * ----------------------------------------------------------------**/
    public function last_add_songInCategory($idCat)
    {
        return $this->where(['active' => '1', 'category_song_id' => $idCat])->orderBy('created_at', 'desc')->take(5)->get();

    }
    /**-------------------------------------------------------------
     * Кінець
     * ----------------------------------------------------------------**/

    /**-------------------------------------------------------------
     * Scope
     * ----------------------------------------------------------------**/
    public function scopePublished($query)
    {
        $query->where(['active' => '1']);
    }
    /**-------------------------------------------------------------
     * Кінець
     * ----------------------------------------------------------------**/
}
